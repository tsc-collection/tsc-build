#
# Taking into account deprecated settings.

CXX ?= $(C++) ;
CXX_FLAGS ?= $(C++ALLFLAGS) ;
CC_FLAGS ?= $(CCALLFLAGS) ;

LINKER ?= $(CXX) ;
LINKER_FLAGS ?= $(C++LDALLFLAGS) ;
DLL_FLAGS ?= $(DLLFLAGS) ;
DLL_SONAME_FLAG ?= $(CC_SONAME_FLAG) ;

# 
# Setting up defaults.

CXX ?= g++ ;
CC ?= gcc ;
LINKER ?= $(CXX) ;
AR ?= ar -cq ;
RANLIB ?= touch ;

DLL_FLAGS ?= -shared ;

CC_FLAGS ?= $(CCDFLAGS) $(CCOFLAGS) ;
CXX_FLAGS ?= $(CCDFLAGS) $(CCOFLAGS) ;

CC_TARGET_NAME_FLAG ?= -o ;
CC_COMPILE_ONLY_FLAG ?= -c ;
CC_INCLUDE_FLAG ?= -I ;
CC_DEFINE_FLAG ?= -D ;

LINKER_TARGET_NAME_FLAG ?= $(CC_TARGET_NAME_FLAG) ;
LINKER_LIB_FLAG ?= -l ;
LINKER_LIBDIR_FLAG ?= -L ;
AR_TARGET_NAME_FLAG ?= "" ;

CXX_TARGET_NAME_FLAG ?= $(CC_TARGET_NAME_FLAG) ;
CXX_COMPILE_ONLY_FLAG ?= $(CC_COMPILE_ONLY_FLAG) ;
CXX_INCLUDE_FLAG ?= $(CC_INCLUDE_FLAG) ;
CXX_DEFINE_FLAG ?= $(CC_DEFINE_FLAG) ;

local _facility ;
for _facility in CC CXX LINKER {
  if $(USE_ATTACHED_TARGET_NAME_FLAG) = true {
    $(_facility)_TARGET_NAME_FLAG_ATTACHED = $($(_facility)_TARGET_NAME_FLAG) ;
    $(_facility)_TARGET_NAME_FLAG_STANDALONE = ;

    continue ;
  }
  $(_facility)_TARGET_NAME_FLAG_ATTACHED = "" ;
  $(_facility)_TARGET_NAME_FLAG_STANDALONE = $($(_facility)_TARGET_NAME_FLAG) ;
}
